<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.habitual.demo.touristRoutes.mapper.TouristRoutesMapper">

    <insert id="insert" parameterType="com.habitual.demo.touristRoutes.entity.TouristRoutesEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tourist_routes (
        <trim suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            create_time,
            <if test="updateBy != null and updateBy != ''">update_by,</if>
            update_time,
            <if test="remark != null and remark != ''">remark,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="scenicSpotName != null and scenicSpotName != ''">scenic_spot_name,</if>
            <if test="image != null and image != ''">image,</if>
            <if test="beginSpot != null and beginSpot != ''">begin_spot,</if>
            <if test="endSpot != null and endSpot != ''">end_spot,</if>
            <if test="traffic != null and traffic != ''">traffic,</if>
            <if test="introduce != null and introduce != ''">introduce,</if>
            <if test="startTime != null">start_time,</if>
            <if test="price != null">price,</if>
            <if test="stock != null">stock,</if>
            <if test="type != null and type != ''">type,</if>
        </trim>
        ) VALUES (
        <trim suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            #{createTime},
            <if test="updateBy != null and updateBy != ''">#{updateBy},</if>
            #{updateTime},
            <if test="remark != null and remark != ''">#{remark},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="scenicSpotName != null and scenicSpotName != ''">#{scenicSpotName},</if>
            <if test="image != null and image != ''">#{image},</if>
            <if test="beginSpot != null and beginSpot != ''">#{beginSpot},</if>
            <if test="endSpot != null and endSpot != ''">#{endSpot},</if>
            <if test="traffic != null and traffic != ''">#{traffic},</if>
            <if test="introduce != null and introduce != ''">#{introduce},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="price != null">#{price},</if>
            <if test="stock != null">#{stock},</if>
            <if test="type != null and type != ''">#{type},</if>
        </trim>
        )
    </insert>

    <update id="update" parameterType="com.habitual.demo.touristRoutes.entity.TouristRoutesEntity">
        UPDATE tourist_routes
        <set>
            <trim suffixOverrides=",">
                <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
                create_time = #{createTime},
                <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
                update_time = #{updateTime},
                <if test="remark != null and remark != ''">remark = #{remark},</if>
                <if test="name != null and name != ''">name = #{name},</if>
                <if test="scenicSpotName != null and scenicSpotName != ''">scenic_spot_name = #{scenicSpotName},</if>
                <if test="image != null and image != ''">image = #{image},</if>
                <if test="beginSpot != null and beginSpot != ''">begin_spot = #{beginSpot},</if>
                <if test="endSpot != null and endSpot != ''">end_spot = #{endSpot},</if>
                <if test="traffic != null and traffic != ''">traffic = #{traffic},</if>
                <if test="introduce != null and introduce != ''">introduce = #{introduce},</if>
                <if test="startTime != null">start_time = #{startTime},</if>
                <if test="price != null">price = #{price},</if>
                <if test="stock != null">stock = #{stock},</if>
                <if test="type != null and type != ''">type = #{type},</if>
            </trim>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM tourist_routes
        WHERE id = #{id}
    </delete>

    <select id="getTotalCount">
        SELECT COUNT(*) FROM tourist_routes
    </select>

    <select id="selectByPage" parameterType="com.habitual.demo.touristRoutes.entity.dto.TouristRoutesPageDto" resultType="com.habitual.demo.touristRoutes.entity.TouristRoutesEntity">
        SELECT
        id, create_by, create_time, update_by, update_time, remark,
        name, scenic_spot_name, image, begin_spot, end_spot, traffic, introduce, start_time, price, stock, type,
        (SELECT COUNT(*) FROM collect WHERE collect.business_id = tourist_routes.id AND collect.type = '旅游线路') AS collect_count
        FROM tourist_routes
        WHERE 1=1
        <if test="name != null and name != ''">
            AND name = #{name}
        </if>
        <if test="type != null and type != ''">
            AND type = #{type}
        </if>
        <if test="createBy != null and createBy != ''">
            AND create_by = #{createBy}
        </if>
        <if test="updateBy != null and updateBy != ''">
            AND update_by = #{updateBy}
        </if>
        <if test="remark != null and remark != ''">
            AND remark = #{remark}
        </if>
        ORDER BY create_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="selectByIdIn" parameterType="list" resultType="com.habitual.demo.touristRoutes.entity.TouristRoutesEntity">
        SELECT
        id, create_by, create_time, update_by, update_time, remark,
        name, scenic_spot_name, image, begin_spot, end_spot, traffic, introduce, start_time, price, stock, type,
        (SELECT COUNT(*) FROM collect WHERE collect.business_id = tourist_routes.id AND collect.type = '旅游线路') AS collect_count
        FROM tourist_routes
        WHERE 1=1
        AND id IN
        <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectTypeList">
        SELECT DISTINCT type FROM tourist_routes;
    </select>

    <select id="selectById" resultType="com.habitual.demo.touristRoutes.entity.TouristRoutesEntity">
        SELECT * FROM tourist_routes
        WHERE 1=1
          AND id = #{id}
    </select>

</mapper>
